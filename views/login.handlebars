<!DOCTYPE html>
<html>

<head>
    <title>User Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        /* Custom styles for your login form */
        .login-container {
            max-width: 400px;
            margin: 0 auto;
        }

        .login-card {
            padding: 20px;
            margin-top: 30px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <div class="login-container">
            <div class="card login-card">
                <form id="loginForm">
                    <div class="mb-3">
                        <label for="_id" class="form-label">User ID:</label>
                        <input type="text" id="_id" name="_id" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password:</label>
                        <input type="password" id="password" name="password" class="form-control" required>
                    </div>
                    <button type="submit" id="loginButton" class="btn btn-primary">Login</button>
                    <div id="statusMessage" class="mt-3"></div>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const loginButton = document.getElementById('loginButton');
            const statusMessage = document.getElementById('statusMessage');

            loginButton.addEventListener('click', async (event) => {
                event.preventDefault();

                const userIdInput = document.getElementById('_id');
                const passwordInput = document.getElementById('password');

                if (!(userIdInput.value && passwordInput.value)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Both User ID and password are required!',
                    });
                    return;
                }

                const data = {
                    _id: userIdInput.value,
                    password: passwordInput.value,
                };

                // Simulate a login request (you would replace this with your actual login logic)
                try {
                    // Replace this with your actual login API endpoint
                    const response = await fetch('/checkdata', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Login successful!',
                            confirmButtonColor: '#28a745' // Custom color for success
                        });
                        statusMessage.textContent = 'Login successful!';
                        statusMessage.style.color = '#28a745'; // Custom color for success
                        window.location.href = '/postData'
                    } else {
                        const responseData = await response.json();
                        const errorMessage = responseData.error || 'Login failed.';
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: errorMessage,
                            confirmButtonColor: '#dc3545' // Custom color for error
                        });
                        statusMessage.textContent = 'Error: ' + errorMessage;
                        statusMessage.style.color = '#dc3545'; // Custom color for error
                    }
                } catch (error) {
                    console.error('An error occurred:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred. Please try again later.',
                        confirmButtonColor: '#dc3545' // Custom color for error
                    });
                    statusMessage.textContent = 'An error occurred. Please try again later.';
                    statusMessage.style.color = '#dc3545'; // Custom color for error
                }
            });
        });
    </script>

    <!-- Include Bootstrap JS and jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
