<!DOCTYPE html>
<html>
<style>
 
  
</style>
<head>
  <title>User Data</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>
  <style>
    /* Add some basic styling for better presentation */
    table {
      width: 100%;
      border-collapse: collapse;
    }

    th,
    td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #dddddd00;
    }
  </style>
</head>

<body>
  <h1>User Data</h1>
  <table>
    <thead>
      <tr>
        <th>User ID</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
        <th>Edit</th>
        <th>Delete</th>
      </tr>
    </thead>
    <tbody>
      {{#each data}}
      <tr data-id="{{this._id}}">
        <td>{{this._id}}</td>
        <td>{{this.first_name}}</td>
        <td>{{this.last_name}}</td>
        <td>{{this.email}}</td>
        <td><a class="edit-button"
            href='/updateUser?userId={{this._id}}&firstName={{this.first_name}}&lastName={{this.last_name}}&email={{this.email}}'
            target="_blank">Edit</a>
            
        </td>
        <td> <button class="delete-button" data-id="{{this._id}}">Delete</button></td>
      </tr>
      {{/each}}
    </tbody>
  </table>

  <script>
    // Delete button event listener
    document.querySelectorAll('.delete-button').forEach(button => {
      button.addEventListener('click', function () {
        const userId = this.getAttribute('data-id');
        showDeleteConfirmation(userId);
      });
    });

    // Show SweetAlert confirmation
    function showDeleteConfirmation(userId) {
      Swal.fire({
        title: 'Delete User',
        text: 'Are you sure you want to delete this user?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Delete',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          deleteUser(userId);
        }
      });
    }

    // Delete user
    function deleteUser(userId) {
      console.log(userId);
      // Make the DELETE request to the backend API
      fetch(`/deleteuser/${userId}`, {
        method: 'DELETE',
      })
      .then(response => response.json())
      .then(data => {
        // Handle the response from the backend if needed
        // For example, you can remove the deleted user row from the table.
        console.log('User deleted successfully:', data);
        const deletedRow = document.querySelector(`tr[data-id="${userId}"]`);
        if (deletedRow) {
          deletedRow.remove();
          Swal.fire({
            title: 'Deleted!',
            text: 'User has been deleted.',
            icon: 'success'
          });
        }
      })
      .catch(error => {
        // Handle any error that occurred during the DELETE request
        console.error('Error deleting user:', error);
        Swal.fire({
          title: 'Error!',
          text: 'An error occurred while deleting the user.',
          icon: 'error'
        });
      });
    }
  </script>
</body>

</html>
